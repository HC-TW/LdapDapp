extends layout

block content
    .row
        .col-12
            ul#myTab.nav.nav-tabs(role='tablist')
                li.nav-item
                    a#control-tab.nav-link.active(data-toggle='tab' href='#control' role='tab' aria-controls='control' aria-selected='true') Control panel
                li.nav-item
                    a#data-tab.nav-link(data-toggle='tab' href='#data' role='tab' aria-controls='data' aria-selected='false') Data viewer
            #myTabContent.tab-content
                #control.tab-pane.fade.show.active(role='tabpanel' aria-labelledby='control-tab')
                    .container
                        .row
                            .col-12 
                                .form-group.row
                                    label.col-sm-4.col-form-label.font-weight-bold(for='staticEmail') Address of TSP
                                    .col-sm-8
                                        input#staticEmail.form-control-plaintext(type='text' readonly='' value="#{org_address}")

                            .col-12
                                table.table.table-bordered#org-table
                                    thead
                                        tr
                                            th.text-center(scope='col') Index
                                            th.text-center(scope='col') Address of data provider
                                            th.text-center(scope='col') Status
                                    tbody

                        .row
                            .col-12
                                .text-right
                                    button.btn.btn-primary.auth-btn.mr-2(type='button') 授權
                                    button.btn.btn-danger.revoke-btn(type='button') 撤回
                #data.tab-pane.fade(role='tabpanel' aria-labelledby='data-tab') ...


    script. 
        $(function() {
            let account = "";
            let contract_address = "#{address}";
            let target_address = "#{org_address}";
            window.ethereum.on('accountsChanged', function(accounts) {
                account = accounts[0];
                $(".account").html("Account:" + account);    
                $(".func4-input1").val(account);
            });

            $.getScript( "/javascripts/web3_bundle.js", async function(data, textStatus, jqxhr) {
                let data_org, data_acc;
                let contractAccInstance;
                let contractOrgInstance;
                $.when(
                    $.getJSON('/dataSharing/org.json', function(data) {
                        data_org = data;
                    }),
                    $.getJSON('/dataSharing/acc.json', function(data) {
                        data_acc = data;
                    })
                ).done(function() {
                    web3.eth.getAccounts().then((accounts) => {
                        account = accounts[0];
                    });

                    contractOrgInstance = new web3.eth.Contract(data_org.abi, contract_address);

                    contractOrgInstance.methods.getOrgList().call({from: account})
                    .then( (result) => { // orgList
                        //- alert(`Index: 0, Address: ${result}`);
                        console.log(result);

                        contractOrgInstance.methods.getAccessManagerAddress(account).call({from: account})
                        .then( (r) => {
                            contractAccInstance = new web3.eth.Contract(data_acc.abi, r);
                            console.log("accMgr:"+r);
                            contractAccInstance.methods.owner().call({from: account})
                            .then( (r) => {
                                console.log("owner:"+r);
                            });
                        })
                        .then( () => {
                            for (let i = 0; i < result.length; ++i) {
                                contractAccInstance.methods.validatePermission(target_address, result[i]).call({from: account})
                                .then( (r) => {
                                    console.log(r);
                                    $("#org-table>tbody").append(`
                                        <tr>
                                            <td>
                                                <div class="custom-control custom-checkbox text-center">
                                                    <input class="custom-control-input" id="customCheck${i}" type="checkbox" value="${result[i]}" name="orgAddress"/>
                                                    <label class="custom-control-label" for="customCheck${i}"></label>
                                                </div>
                                            </td>
                                            <td class="text-center">${result[i]}</td>
                                            <td class="text-center">`+
                                            (r == false ? `<i class="fas fa-lock"></i>` : `<i class="fas fa-lock-open"></i>`)
                                            +`</td>
                                        </tr>
                                    `);
                                });
                            }
                        });
                    })
                    .catch( (err) => {
                        alert(err);
                    });

                    $(".auth-btn").on("click", function(e) {
                        let selected = [];
                        $.each($("input[name=orgAddress]:checked"), function() {
                            selected.push($(this).val());
                            contractAccInstance.methods.authorizeAccess(target_address, $(this).val()).send({from: account})
                            .then( (result) => {
                                console.log("auth txHash:"+result.transactionHash);
                                location.reload();
                            })
                            .catch( (err) => {
                                console.log("err"+err);
                            })
                        });
                        //- alert(selected);
                    })

                    $(".revoke-btn").on("click", function(e) {
                        let selected = [];
                        $.each($("input[name=orgAddress]:checked"), function() {
                            selected.push($(this).val());
                            contractAccInstance.methods.revokeAccess(target_address, $(this).val()).send({from: account})
                            .then( (result) => {
                                console.log("revoke txHash:"+result.transactionHash);
                                location.reload();
                            })
                            .catch( (err) => {
                                console.log("err"+err);
                            })
                        });
                        //- alert(selected);
                    })
                });
            });
        });